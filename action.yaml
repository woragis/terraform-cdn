name: 'Terraform AWS Cognito'
description: 'Terraform AWS Cognito'

inputs:
  terraform-dir:
    description: 'Directory where the Terraform code is located'
    required: true

  aws-region:
    description: 'AWS region for deployment'
    required: false
    default: 'us-east-1'

  cognito-name:
    description: 'Subdomain (e.g., app or www)'
    required: true

  cognito-user-pool:
    description: 'Deployment environment (e.g., dev, prod, staging)'
    required: true

runs:
  using: 'composite'
  steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: '1.5.0'

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ env.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ env.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ inputs.aws-region }}

    - name: Terraform Init
      working-directory: ${{ inputs.terraform-dir }}
      shell: bash
      run: terraform init

    - name: 🔍 Get Cognito User Pool ID by name
      id: get_pool_id
      shell: bash
      run: |
        pool_id=$(aws cognito-idp list-user-pools --max-results 60 \
          --query "UserPools[?Name=='${{ inputs.cognito-user-pool }}'].Id" \
          --output text)
        echo "COGNITO_POOL_ID=$pool_id" >> $GITHUB_ENV

    # Optional: Import if needed
    - name: 📦 Terraform Import Cognito
      shell: bash
      working-directory: ${{ inputs.terraform-dir }}
      run: terraform import aws_cognito_user_pool.main ${{ env.COGNITO_POOL_ID }}

    - name: Terraform Plan
      id: plan
      working-directory: ${{ inputs.terraform-dir }}
      shell: bash
      run: |
        terraform plan -out=tfplan \
          -var="cognito_name=${{ inputs.cognito-name }}" \
          -var="cognito_user_pool=${{ inputs.cognito-user-pool }}" \
          -var="cognito_user_pool_id=${{ env.COGNITO_POOL_ID }}"

    - name: Terraform Destroy on Failure
      if: env.apply_success == 'false'
      working-directory: ${{ inputs.terraform-dir }}
      shell: bash
      run: |
        terraform destroy -auto-approve \
        # -var="create_cognito=${{ env.create_cognito }}" \
        -var="cognito_name=${{ inputs.cognito-name }}" \
        -var="cognito_user_pool=${{ inputs.cognito-user-pool }}"
