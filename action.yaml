name: 'Terraform AWS Cognito'
description: 'Terraform AWS Cognito'

inputs:
  terraform-dir:
    description: 'Directory where the Terraform code is located'
    required: true

  aws-region:
    description: 'AWS region for deployment'
    required: false
    default: 'us-east-1'

  cognito-name:
    description: 'Subdomain (e.g., app or www)'
    required: true

  cognito-user-pool:
    description: 'Deployment environment (e.g., dev, prod, staging)'
    required: true

runs:
  using: 'composite'
  steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: '1.5.0'

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ env.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ env.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ inputs.aws-region }}

    - name: Terraform Init
      working-directory: ${{ inputs.terraform-dir }}
      shell: bash
      run: terraform init

    - name: Terraform Plan
      id: plan
      working-directory: ${{ inputs.terraform-dir }}
      shell: bash
      run: |
        terraform plan -out=tfplan \
          # -var="create_cognito=${{ env.create_cognito }}" \
          -var="cognito_name=${{ inputs.cognito-name }}" \
          -var="cognito_user_pool=${{ inputs.cognito-user-pool }}"

    - name: Terraform Apply with Retry
      id: apply
      continue-on-error: true
      working-directory: ${{ inputs.terraform-dir }}
      shell: bash
      run: |
        for attempt in {1..5}; do
          if terraform apply -auto-approve tfplan; then
            echo "apply_success=true" >> $GITHUB_ENV
            break
          else
            sleep 120
            if [ $attempt -eq 5 ]; then
              echo "apply_success=false" >> $GITHUB_ENV
              exit 1
            fi
          fi
        done

    - name: Terraform Destroy on Failure
      if: env.apply_success == 'false'
      working-directory: ${{ inputs.terraform-dir }}
      shell: bash
      run: |
        terraform destroy -auto-approve \
        # -var="create_cognito=${{ env.create_cognito }}" \
        -var="cognito_name=${{ inputs.cognito-name }}" \
        -var="cognito_user_pool=${{ inputs.cognito-user-pool }}"
